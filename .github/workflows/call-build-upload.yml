name: release-upload-assets

permissions:
  contents: write

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      tag_ref:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      package_name:
        description: The name of the package (e.g. 'koji')
        required: true
        type: string
      tag_ref:
        description: The tag reference (e.g. 'refs/tags/v0.1.0')
        required: true
        type: string

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ inputs.tag_ref }}
      - uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ inputs.package_name }}
          ref: ${{ inputs.tag_ref }}
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          features: ${{ contains(matrix.target, 'windows') && 'vendored-openssl' || '' }}
          token: ${{ secrets.GITHUB_TOKEN }}
